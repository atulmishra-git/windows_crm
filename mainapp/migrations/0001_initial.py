# Generated by Django 3.0.3 on 2020-08-19 14:16

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mainapp.fields
import mainapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('surname', models.CharField(max_length=255, verbose_name='Surname')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Phone')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('offer', 'offer'), ('offer_confirmation', 'offer confirmation'), ('install', 'install'), ('invoice', 'invoice')], max_length=32, unique=True, verbose_name='type')),
                ('subject', models.CharField(max_length=256, verbose_name='subject')),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_code', models.PositiveIntegerField(default=mainapp.models.Customer.auto_code, null=True, verbose_name='Customer Code')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('offer_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='offer id')),
                ('invoice_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Invoice ID')),
                ('street', models.CharField(max_length=500, verbose_name='street')),
                ('postcode', models.CharField(max_length=255, verbose_name='postcode')),
                ('place', models.CharField(max_length=255, verbose_name='place')),
                ('surname', models.CharField(max_length=255, verbose_name='surname')),
                ('phone', models.CharField(default='N.A', max_length=20, unique=True, verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, default='N.A', max_length=20, null=True, verbose_name='Mobile')),
                ('email', models.CharField(blank=True, default='N.A', max_length=120, null=True, verbose_name='Email')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100, null=True, verbose_name='gender')),
                ('purpose', models.CharField(blank=True, choices=[('Comapny', 'Company'), ('individual', 'individual'), ('Family', 'Family')], max_length=100, null=True, verbose_name='purpose')),
            ],
        ),
        migrations.CreateModel(
            name='Mechanic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='company')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('surname', models.CharField(max_length=256, verbose_name='surname')),
                ('street', models.CharField(blank=True, max_length=500, null=True, verbose_name='street')),
                ('postcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='postcode')),
                ('place', models.CharField(blank=True, max_length=255, null=True, verbose_name='place')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
            ],
        ),
        migrations.CreateModel(
            name='Reseller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='company')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('surname', models.CharField(max_length=256, verbose_name='surname')),
                ('street', models.CharField(blank=True, max_length=500, null=True, verbose_name='street')),
                ('postcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='postcode')),
                ('place', models.CharField(blank=True, max_length=255, null=True, verbose_name='place')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='message')),
                ('todo_date', models.DateField(null=True, verbose_name='Complete Before')),
                ('todo_time', models.TimeField(default=datetime.time(16, 0), verbose_name='')),
                ('completed', models.BooleanField(default=False, verbose_name='completed')),
                ('created', models.DateField(null=True)),
                ('private', models.BooleanField(default=False, verbose_name='private')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_manufacturer', models.CharField(max_length=255, null=True, verbose_name='manufacturer')),
                ('watt', models.PositiveIntegerField(default=0, null=True, verbose_name='watt')),
                ('module_count', models.PositiveIntegerField(default=0, null=True, verbose_name='module count')),
                ('with_battery', models.BooleanField(blank=True, default=False, null=True, verbose_name='with battery')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='manufacturer')),
                ('kwh', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kw/H')),
                ('manufacturer2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer')),
                ('kwh2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kw/H')),
                ('price_without_tax', models.FloatField(default=0, help_text='Price in Euro (â‚¬)', null=True, validators=[django.core.validators.MinValueValidator(0, 'Should be above 0')], verbose_name='price without tax')),
                ('offer_by', models.CharField(choices=[('Email', 'Via Email'), ('Letter', 'Via Letter')], max_length=16, null=True, verbose_name='offer by')),
                ('offer_date', models.DateField(blank=True, null=True, verbose_name='offer date')),
                ('declined', models.BooleanField(blank=True, default=False, null=True, verbose_name='declined')),
                ('date_sent', models.DateField(blank=True, null=True, verbose_name='date sent')),
                ('project_planning_created', models.BooleanField(default=False, verbose_name='project planning created')),
                ('dc_term', models.DateField(blank=True, null=True, verbose_name='DC Term')),
                ('ac_term', models.DateField(blank=True, null=True, verbose_name='AC Term')),
                ('roof_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='roof type')),
                ('roof_tilt', models.FloatField(blank=True, help_text='in Degrees', null=True, verbose_name='roof tilt')),
                ('alignment', models.CharField(blank=True, max_length=64, null=True, verbose_name='alignment')),
                ('module_area', models.FloatField(blank=True, default=0, help_text='Area in meter squared (m2)', null=True, validators=[django.core.validators.MinValueValidator(0, 'Should be above 0')], verbose_name='module area')),
                ('extra_details', models.TextField(blank=True, null=True, verbose_name='extra details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_of_receipt', models.DateField(blank=True, null=True, verbose_name='Date of receipt')),
                ('ac_mechanic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ac_purchases', to='mainapp.Mechanic', verbose_name='AC Mechanic')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_record', to='mainapp.Customer', verbose_name='Customer')),
                ('dc_mechanic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dc_purchases', to='mainapp.Mechanic', verbose_name='DC Mechanic')),
                ('reseller_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='mainapp.Reseller', verbose_name='Reseller')),
            ],
        ),
        migrations.CreateModel(
            name='CallNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(max_length=1000, verbose_name='notes')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Not started'), (1, 'Pending In Work'), (2, 'Finished')], default=1)),
                ('created', models.DateTimeField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_notes', to='mainapp.Customer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('kind', models.CharField(default='custom', max_length=16, verbose_name='kind')),
                ('upload', mainapp.fields.ContentTypeRestrictedFileField(null=True, upload_to='uploads/', verbose_name='Upload')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='mainapp.Customer')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
